(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./js/index.js":
/*!*********************!*\
  !*** ./js/index.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _nzsc_single_player_web__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nzsc_single_player_web */ \"./js/nzsc_single_player_web.js\");\n/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! query-string */ \"./node_modules/query-string/index.js\");\n/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(query_string__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n////////////////\n// Set up constants.\n////////////////\n\nconst MAX32 = 2 ** 32 - 1;\nconst ENTER_KEY = 13;\n\n////////////////\n// Parse query-string.\n////////////////\n\nconst parsedQuery = query_string__WEBPACK_IMPORTED_MODULE_1___default.a.parse(location.search);\n\nconst parsedSeed = parseInt(parsedQuery.seed);\nconst overrideSeed = isNaN(parsedSeed) || parsedSeed > MAX32\n  ? null\n  : parsedSeed;\n\nconst isAutofocusDisabled = parsedQuery.disable_autofocus === undefined\n  ? false\n  : (\n    parsedQuery.disable_autofocus === null\n    || parsedQuery.disable_autofocus.trim() === 'true'\n  );\n\n////////////////\n// Set up DOM.\n////////////////\n\nconst container = document.getElementById('terminal-container');\nconst output = document.getElementById('terminal-output');\nconst input = document.getElementById('terminal-input');\n\nif (!isAutofocusDisabled) {\n  container.addEventListener('mousedown', (e) => {\n    e.preventDefault();\n    input.focus();\n    container.scrollTop = container.scrollHeight;\n  }, { passive: false });\n}\n\n////////////////\n// Helpers.\n////////////////\n\nconst write = (text) => {\n  output.textContent += text;\n};\n\nconst stringifyOutput = (output) => {\n  const questionStr = output.question();\n\n  const notificationsJsonStr = output.notifications();\n  const notificationsStr = JSON.parse(notificationsJsonStr).map(n => n + '\\n').join('');\n  const fullStr = notificationsStr + (notificationsStr.length ? '\\n' : '') + questionStr;\n\n  return fullStr;\n};\n\n////////////////\n// Main logic.\n////////////////\n\nconst newGame = () => {\n  const seed = overrideSeed === null\n    ? Math.random() * MAX32\n    : overrideSeed;\n  const game = _nzsc_single_player_web__WEBPACK_IMPORTED_MODULE_0__[\"SinglePlayerNZSCWebInterface\"].new(seed);\n\n  const initialOutput = game.initial_output();\n\n  const fullStr = stringifyOutput(initialOutput);\n  write(fullStr + '\\n\\n');\n\n  input.focus();\n  container.scrollTop = container.scrollHeight;\n\n  const waitForPlayAgainResponse = () => {\n    const listener = (e) => {\n      if (e.keyCode === ENTER_KEY) {\n        input.removeEventListener('keypress', listener);\n\n        const value = input.value;\n        input.value = '';\n\n        write(value);\n        write('\\n\\n');\n\n        if (value.charAt(0).toLowerCase() === 'y') {\n          newGame();\n        }\n      }\n    };\n\n    input.addEventListener('keypress', listener);\n  };\n\n  const waitForSubmission = () => {\n    const listener = (e) => {\n      if (e.keyCode === ENTER_KEY) {\n        input.removeEventListener('keypress', listener);\n\n        const output = game.next(input.value);\n        const fullStr = stringifyOutput(output);\n        const isPromptFinal = output.question() === '';\n\n        write(input.value + '\\n\\n' + fullStr + '\\n\\n');\n\n        input.value = '';\n\n        input.focus();\n        container.scrollTop = container.scrollHeight;\n\n        if (!isPromptFinal) {\n          waitForSubmission();\n        } else {\n          write('\\n\\nPlay again? y/N\\n\\n');\n          input.focus();\n          container.scrollTop = container.scrollHeight;\n          waitForPlayAgainResponse();\n        }\n      }\n    };\n    input.addEventListener('keypress', listener);\n  };\n\n  waitForSubmission();\n};\n\n////////////////\n// Start a game.\n////////////////\n\nnewGame();\n\n\n//# sourceURL=webpack:///./js/index.js?");

/***/ }),

/***/ "./js/nzsc_single_player_web.js":
/*!**************************************!*\
  !*** ./js/nzsc_single_player_web.js ***!
  \**************************************/
/*! exports provided: SinglePlayerNZSCWebInterface, OutputWebInterface, __wbindgen_throw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SinglePlayerNZSCWebInterface\", function() { return SinglePlayerNZSCWebInterface; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OutputWebInterface\", function() { return OutputWebInterface; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_throw\", function() { return __wbindgen_throw; });\n/* harmony import */ var _nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./nzsc_single_player_web_bg */ \"./js/nzsc_single_player_web_bg.wasm\");\n/* tslint:disable */\n\n\nconst TextDecoder = typeof self === 'object' && self.TextDecoder\n    ? self.TextDecoder\n    : __webpack_require__(/*! util */ \"./node_modules/util/util.js\").TextDecoder;\n\nlet cachedDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null ||\n        cachegetUint8Memory.buffer !== _nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer)\n        cachegetUint8Memory = new Uint8Array(_nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nlet cachedGlobalArgumentPtr = null;\nfunction globalArgumentPtr() {\n    if (cachedGlobalArgumentPtr === null)\n        cachedGlobalArgumentPtr = _nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_global_argument_ptr\"]();\n    return cachedGlobalArgumentPtr;\n}\n\nlet cachegetUint32Memory = null;\nfunction getUint32Memory() {\n    if (cachegetUint32Memory === null ||\n        cachegetUint32Memory.buffer !== _nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer)\n        cachegetUint32Memory = new Uint32Array(_nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    return cachegetUint32Memory;\n}\n\nconst TextEncoder = typeof self === 'object' && self.TextEncoder\n    ? self.TextEncoder\n    : __webpack_require__(/*! util */ \"./node_modules/util/util.js\").TextEncoder;\n\nlet cachedEncoder = new TextEncoder('utf-8');\n\nfunction passStringToWasm(arg) {\n\n    const buf = cachedEncoder.encode(arg);\n    const ptr = _nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"](buf.length);\n    getUint8Memory().set(buf, ptr);\n    return [ptr, buf.length];\n}\n\nclass SinglePlayerNZSCWebInterface {\n\n                static __construct(ptr) {\n                    return new SinglePlayerNZSCWebInterface(ptr);\n                }\n\n                constructor(ptr) {\n                    this.ptr = ptr;\n                }\n\n            free() {\n                const ptr = this.ptr;\n                this.ptr = 0;\n                _nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_singleplayernzscwebinterface_free\"](ptr);\n            }\n        static new(arg0) {\n    return SinglePlayerNZSCWebInterface.__construct(_nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"singleplayernzscwebinterface_new\"](arg0));\n}\ninitial_output() {\n    return OutputWebInterface.__construct(_nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"singleplayernzscwebinterface_initial_output\"](this.ptr));\n}\nnext(arg0) {\n    const [ptr0, len0] = passStringToWasm(arg0);\n    try {\n        return OutputWebInterface.__construct(_nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"singleplayernzscwebinterface_next\"](this.ptr, ptr0, len0));\n    } finally {\n        _nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr0, len0 * 1);\n    }\n}\n}\n\nclass OutputWebInterface {\n\n                static __construct(ptr) {\n                    return new OutputWebInterface(ptr);\n                }\n\n                constructor(ptr) {\n                    this.ptr = ptr;\n                }\n\n            free() {\n                const ptr = this.ptr;\n                this.ptr = 0;\n                _nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbg_outputwebinterface_free\"](ptr);\n            }\n        notifications() {\n    const retptr = globalArgumentPtr();\n    _nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"outputwebinterface_notifications\"](retptr, this.ptr);\n    const mem = getUint32Memory();\n    const ptr = mem[retptr / 4];\n    const len = mem[retptr / 4 + 1];\n    const realRet = getStringFromWasm(ptr, len);\n    _nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr, len * 1);\n    return realRet;\n}\nquestion() {\n    const retptr = globalArgumentPtr();\n    _nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"outputwebinterface_question\"](retptr, this.ptr);\n    const mem = getUint32Memory();\n    const ptr = mem[retptr / 4];\n    const len = mem[retptr / 4 + 1];\n    const realRet = getStringFromWasm(ptr, len);\n    _nzsc_single_player_web_bg__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_free\"](ptr, len * 1);\n    return realRet;\n}\n}\n\nfunction __wbindgen_throw(ptr, len) {\n    throw new Error(getStringFromWasm(ptr, len));\n}\n\n\n\n//# sourceURL=webpack:///./js/nzsc_single_player_web.js?");

/***/ }),

/***/ "./js/nzsc_single_player_web_bg.wasm":
/*!*******************************************!*\
  !*** ./js/nzsc_single_player_web_bg.wasm ***!
  \*******************************************/
/*! exports provided: memory, __wbg_singleplayernzscwebinterface_free, __wbg_outputwebinterface_free, outputwebinterface_notifications, outputwebinterface_question, singleplayernzscwebinterface_new, singleplayernzscwebinterface_initial_output, singleplayernzscwebinterface_next, __wbindgen_global_argument_ptr, __wbindgen_malloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar instance = __webpack_require__.w[module.i];\n// export exports from WebAssembly module\nmodule.exports = instance.exports;\n// exec imports from WebAssembly module (for esm order)\n__webpack_require__(/*! ./nzsc_single_player_web */ \"./js/nzsc_single_player_web.js\");\n// exec wasm module\ninstance.exports.__webpack_init__()\n\n//# sourceURL=webpack:///./js/nzsc_single_player_web_bg.wasm?");

/***/ })

}]);